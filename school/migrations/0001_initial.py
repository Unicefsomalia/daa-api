# Generated by Django 3.1.4 on 2023-03-07 10:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('region', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbsentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DeleteReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GraduatesStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveSmallIntegerField(max_length=4)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromoteSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('completed', models.BooleanField(default=False)),
                ('year', models.PositiveSmallIntegerField(max_length=4)),
                ('graduates_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.graduatesstream')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('emis_code', models.CharField(max_length=45, unique=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('school_ministry', models.CharField(blank=True, max_length=100, null=True)),
                ('founder_name', models.CharField(blank=True, max_length=70, null=True)),
                ('year_of_foundation', models.DateField(blank=True, null=True)),
                ('ownership', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(choices=[('R', 'Rural'), ('U', 'Urban')], default='R', max_length=2)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('start_of_calendar', models.DateField(blank=True, null=True)),
                ('end_of_calendar', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('lowest_grade', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], default='P1', max_length=4)),
                ('highest_grade', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], default='P8', max_length=4)),
                ('schooling', models.CharField(choices=[('D', 'Day Only'), ('B', 'Boarding Only'), ('BD', 'Boarding and Day')], default='D', max_length=4)),
                ('gender', models.CharField(choices=[('M', 'Boys'), ('F', 'Girls'), ('MX', 'Mixed')], default='MX', max_length=4)),
                ('moe_id', models.CharField(blank=True, max_length=50, null=True)),
                ('moe_emis_code', models.CharField(blank=True, max_length=50, null=True)),
                ('dummy', models.BooleanField(default=False)),
                ('village', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schools', to='region.village')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SpecialNeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='', max_length=45, null=True)),
                ('last_attendance', models.DateField(blank=True, null=True)),
                ('base_class', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], default='1', max_length=3)),
                ('moe_id', models.CharField(blank=True, max_length=50, null=True)),
                ('moe_section_id', models.CharField(blank=True, max_length=45, null=True)),
                ('moe_name', models.CharField(blank=True, max_length=45, null=True)),
                ('moe_section_name', models.CharField(blank=True, max_length=45, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streams', to='school.school')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('emis_code', models.BigIntegerField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_enrolled', models.DateField(default=django.utils.timezone.now)),
                ('admission_no', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], default='M', max_length=2)),
                ('previous_class', models.IntegerField(blank=True, default=0, null=True)),
                ('mode_of_transport', models.CharField(choices=[('PERSONAL', 'Personal Vehicle'), ('BUS', 'School Bus'), ('FOOT', 'By Foot'), ('NS', 'Not Set')], default='NS', max_length=20)),
                ('time_to_school', models.CharField(choices=[('1HR', 'One Hour'), ('-0.5HR', 'Less than 1/2 Hour'), ('+1HR', 'More than one hour.'), ('NS', 'Not Set')], default='NS', max_length=50)),
                ('distance_from_school', models.IntegerField(blank=True, null=True)),
                ('household', models.IntegerField(default=0, null=True)),
                ('meals_per_day', models.IntegerField(blank=True, default=0, null=True)),
                ('not_in_school_before', models.BooleanField(default=False)),
                ('emis_code_histories', models.CharField(blank=True, max_length=200, null=True)),
                ('total_attendance', models.IntegerField(blank=True, default=0, null=True)),
                ('total_absents', models.IntegerField(blank=True, default=0, null=True)),
                ('last_attendance', models.DateField(blank=True, null=True)),
                ('knows_dob', models.BooleanField(default=True)),
                ('father_name', models.CharField(blank=True, max_length=50, null=True)),
                ('father_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('father_status', models.CharField(blank=True, choices=[('A', 'Alive'), ('D', 'Deceased')], max_length=20, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=50, null=True)),
                ('mother_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mother_status', models.CharField(blank=True, choices=[('A', 'Alive'), ('D', 'Deceased')], max_length=20, null=True)),
                ('live_with_parent', models.BooleanField(default=False)),
                ('guardian_name', models.CharField(blank=True, max_length=50, null=True)),
                ('guardian_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('guardian_status', models.CharField(choices=[('B', 'Both Parents'), ('S', 'Single Parent'), ('N', 'None'), ('NS', 'Not Set')], default='NS', max_length=20)),
                ('guardian_relationship', models.CharField(blank=True, max_length=45, null=True)),
                ('has_special_needs', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('graduated', models.BooleanField(default=False)),
                ('dropout_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('offline_id', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('OOSC', 'Over age'), ('NE', 'Never Enrolled'), ('PE', 'Re-Enrolled')], default='NE', max_length=5)),
                ('moe_id', models.CharField(blank=True, max_length=50, null=True)),
                ('moe_unique_id', models.CharField(blank=True, max_length=45, null=True)),
                ('moe_extra_info', models.JSONField(blank=True, null=True)),
                ('has_attended_pre_primary', models.BooleanField(default=True)),
                ('house_number', models.CharField(blank=True, max_length=100, null=True)),
                ('street_name', models.CharField(blank=True, max_length=100, null=True)),
                ('upi', models.CharField(blank=True, help_text='Unique Identification provided by the school', max_length=45, null=True)),
                ('graduates_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.graduatesstream')),
                ('guardian_village', models.ForeignKey(blank=True, max_length=45, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students_guardians', to='region.village')),
                ('special_needs', models.ManyToManyField(blank=True, null=True, related_name='students', to='school.SpecialNeed')),
                ('stream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='school.stream')),
                ('village', models.ForeignKey(blank=True, max_length=45, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='region.village')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=45)),
                ('middle_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(max_length=45)),
                ('date_started_teaching', models.DateField(blank=True, null=True)),
                ('joined_current_school', models.DateField(blank=True, null=True)),
                ('is_non_delete', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('E', 'Employed'), ('V', 'Volunteer')], default='E', max_length=3)),
                ('employment_id', models.CharField(blank=True, max_length=45, null=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('qualifications', models.CharField(blank=True, choices=[('NS', 'Not Set'), ('UNI', 'UNIVERSITY'), ('COL', 'COLLEGE')], default='NS', max_length=3, null=True)),
                ('is_school_admin', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(choices=[('NS', 'Not Set'), ('S', 'Single'), ('M', 'Married'), ('D', 'Divorced')], default='NS', max_length=3)),
                ('dob', models.DateField(blank=True, null=True)),
                ('moe_id', models.CharField(blank=True, max_length=50, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='school.school')),
                ('streams', models.ManyToManyField(blank=True, null=True, related_name='teachers', to='school.Stream')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='StudentSchoolTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('accept_class', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=3)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('accepted', models.BooleanField(default=False, editable=False)),
                ('complete', models.BooleanField(default=False, editable=False)),
                ('accept_stream', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.stream')),
                ('from_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaving_students', to='school.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
                ('to_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joining_students', to='school.school')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentReactivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('reason', models.TextField(blank=True, max_length=1500, null=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactivations', to='school.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reacivations', to='school.student')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='StudentIntergrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('can_reverse', models.BooleanField(default=True, editable=False)),
                ('completed', models.BooleanField(default=False, editable=False)),
                ('from_stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intergrating_students', to='school.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
                ('to_stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intergrated_students', to='school.stream')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentDeleteReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, max_length=1500, null=True)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.deletereason')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SchoolsStudentsImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('import_file', models.FileField(upload_to='imports')),
                ('step', models.CharField(choices=[('Q', 'Queued'), ('VH', 'Validating Required Columns...'), ('PI', 'Preparing...'), ('I', 'Processing...'), ('F', 'Failed'), ('D', 'Done')], default='Q', editable=False, max_length=3)),
                ('errors_file', models.FileField(blank=True, null=True, upload_to='imports')),
                ('start_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('end_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('args', models.TextField(blank=True, editable=False, max_length=1000, null=True)),
                ('rows_count', models.IntegerField(default=0, editable=False)),
                ('imported_rows_count', models.IntegerField(default=0, editable=False)),
                ('duplicates_count', models.IntegerField(default=0, editable=False)),
                ('error_rows_count', models.IntegerField(default=0, editable=False)),
                ('new_students_created', models.IntegerField(default=0, editable=False)),
                ('should_import', models.BooleanField(default=True)),
                ('errors', models.TextField(default='', max_length=2000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PromoteStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('completed', models.BooleanField(default=False)),
                ('next_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='next_class', to='school.stream')),
                ('prev_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prev_class', to='school.stream')),
                ('promote_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream_promotions', to='school.promoteschool')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='promoteschool',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.school'),
        ),
        migrations.AddField(
            model_name='graduatesstream',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduate_streams', to='school.school'),
        ),
        migrations.CreateModel(
            name='StudentAbsentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, max_length=1500, null=True)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.absentreason')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
            ],
            options={
                'ordering': ('id',),
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['gender'], name='students_gender_indx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['id', 'gender'], name='students_id_gender_indx'),
        ),
        migrations.AlterUniqueTogether(
            name='graduatesstream',
            unique_together={('school', 'year')},
        ),
    ]
